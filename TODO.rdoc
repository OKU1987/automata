= ./post

- デフォルトで選択される課題を期限に応じて決定する
- 「自動コンパイルに失敗しました」等のエラーメッセージを汎用的なものにする
- 古いアップロードファイルを自動で消す機能

= ./record

- 管理権限用操作
  - 解答状況タブ [編集] → 編集モードへ
    - チェックボックスを表示
- 通ってないテストを「要再提出」にするオプション
- コメントタブ
  - プレーンテキストで./db/report/user/comment.ymlに管理
  - 表示形式
    a. Markdownか何かでJS側で整形
    b. rdocでRuby側で整形
    - XSSだいじょうぶか
  - 未読管理
    - どうやって管理するか
      a. コメントごとに既読者を記録
      b. コメントID(レポート-ユーザローカルな値)を単調増加にして,
         既読者のIDごとに既読コメントIDの最大値を記録
        - というかIDはISO 8601でいいのでは
        - 作成日時がIDでtimestampが更新日時
    - 表示はどこにするか
      a. ユーザの名前のところ?
      b. コメントタブ?
      c. 両方?
    - 編集されたときは未読にするかどうか
  - 閲覧制限(管理者のみ設定可)
    - 管理者と投稿者は許可
    - ユーザ自身
    - 他のユーザ(master.record.open==trueのときのみ)

= ./script

- 初期化スクリプト
  - 755 www-data:www-data
    - ./db/kadai
  - 664 user:www-data
    - ./db/data.yml
    - ./db/passwd
    - ./config/local.yml
    - ./.htaccess
  - 660 user:www-data
    - ./.htdigest
  - 最初の特権アカウントを設定
- 管理用スクリプト
  - ユーザ追加

= ./db

- 特権ユーザを./db/data.ymlで管理する

= ./admin

- 設定用ツールのWebインタフェース
  - ユーザを追加
    - ./db/data.ymlを更新
    - パスワードを生成
      - ./db/passwdにパスワードを保存
      - ./.htdigestを更新
  - ./config/local.ymlの設定項目変更機能
  - セットアップが成功しているかどうかのステータスページ
  - ドキュメント
    - 初期化前は誰でも見える
    - 初期化後は特権アカウントからしか見えない

= ./api/t

- test_counter.rb
- test_report.rb
- test_user.rb
- test_log.rb
- test_app.rb
- test_api_user.rb
- test_api_scheme.rb
- test_api_master.rb
- テストをすべて実行するスクリプト

= できたらいいな

- 剽窃チェッカ
- diffツール
