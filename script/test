#! /usr/bin/env ruby

Dir.chdir(File.dirname(File.expand_path($0)))
$:.unshift('./lib')

require 'time'
require 'etc'

require 'app'
require 'log'

$argv = {}; arg=nil
$argv[:help] = %w'-h --help'.any?{|x| $*.delete(x)}
$argv[:rebuild] = %w'-r --rebuild'.any?{|x| $*.delete(x)}
$argv[:id] = $*.reject!{|x|x=~/^--id=(.*)$/&&arg=$1} && arg || $argv[:id]

report_id = $*.shift
user = $*.shift

if $argv[:help] || !report_id || !user
  print <<"EOM"
Usage: #{$0} [-h] [--rebuild] [--id=YYYY-MM-DDThh:mm:ss+zzzz] report-id user
EOM
  exit
end

dir = {}
dir[:user]   = App::KADAI + report_id + user
dir[:test]   = dir[:user] + 'test'

log_file = dir[:user][App::FILES[:log]]
log = if $argv[:id]
        Log.new(log_file, Time.parse($argv[:id])).get(:data)
      else
        Log.new(log_file).latest(:data)
      end
time = log['id']

cmd = {}

# ../test/build.rb report_id user post ex...
cmd[:build] = "#{App::FILES[:build]} '#{report_id}' '#{user}' '#{log['id']}'"
cmd[:build] = "#{cmd[:build]} #{log['report'].join(' ')}"

# ../test/test.rb report_id user post
cmd[:test] = "#{App::FILES[:sandbox]} '#{report_id}' '#{user}' '#{log['id']}'"


# sudo su www-data -c "command"
owner = File.stat(dir[:user].to_s).uid
if owner != Process.uid
  cmd.each{|k,c| cmd[k] = %Q!sudo su #{Etc.getpwuid(owner).name} -c "#{c}"!}
end

# build
if $argv[:rebuild] || !File.exist?(dir[:test][App::FILES[:test]])
  unless system(cmd[:build])
    $stderr.puts('build failed')
    exit(1)
  end
end

# test
unless system(cmd[:test])
  $stderr.puts('test failed')
  exit(2)
end
