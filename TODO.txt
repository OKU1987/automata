o 提出要件の内容をテキストに反映してもらう
o ty_declのテストケース
o 課題1も自動でテストしたい
  - post.cgiで投稿できるようにする
  o 解いた問題のチェックリストが縦に長すぎるのをなんとかする
  o 提出要件
  o post.cgiでもテストをしない課題を定義可能にする
    (ビルド・テストコマンドも課題ごとにする?)
  o コンパイルテストのみ自動でやる?
o デフォルトで選択される課題を期限に応じて決定する
o isle4fp特有の部分と, 共通部分にリポジトリを分割
  o isle4fpのリポジトリが共通部分のリポジトリをサブモジュールとして持つ
  o 共通部分
    o lib
    o api
    o script
    o test/*.rb
    o test/lib
    o record
    o db?
    o *.js
    o *.xhtml
  o isle4fp特有
    o config
o sandbox用のファイルを専用のディレクトリに移動
  o 共通部分側
    o tester.cgi
  o isle4fp側
    o iptablesの設定?
    o KVMの起動スクリプト?
o- api/t
--- test_exercise.rb
o-- test_counter.rb
o-- test_report.rb
o-- test_user.rb
o-- test_log.rb
o-- test_app.rb
o-- test_api_user.rb
o-- test_api_scheme.rb
o-- test_api_master.rb
o-- テストをすべて実行するスクリプト
o アップロードされたファイルを閲覧する機能
o ドキュメント
o セットアップツール?
  o 初期化
    o 775 user:www-dataで作成
      o ./db/kadai
      o ./db/data.yml
      o ./config/local.yml
      o ./.htaccess
    o 770 user:www-dataで作成
      o ./.htdigest
    o 最初の特権アカウントを設定
  o 特権アカウントを変更/追加
    o config/local.ymlを更新
    o .htdigestを更新
  o ユーザを追加
    o db/data.ymlを更新
    o パスワードを生成
      o db/passwdにパスワードを保存
      o .htdigestを更新
  o セットアップが成功しているかどうかのステータスページ
  o ドキュメント
    o 初期化前は誰でも見える
    o 初期化後は特権アカウントからしか見えない
